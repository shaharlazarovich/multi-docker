version: '3'
services:
  postgres:
    image: 'postgres:latest'
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server #context is the path
    volumes:
      - /app/node_modules #make sure node_modules isn't overwritten
      - ./server:/app #copy the server folder to app folder in the container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app 
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379


#building the custom image (from the same folder where
#dockerfile is) - "docker build -f Docker.dev ."
#creating the containee - "docker run ."
#running docker compose: "docker-compose up --build"
#for pushing into git, in the project folder type:
#"git init" - will create a local git repository
#"git add ." - will add all the current folder files
#"git commit -m [label name]" - will commit everything locally
#for commiting to remote- first create repo on github.com
#"git remote add origin https://github.com/shaharlazarovich/multi-docker.git"
#"git remote -v" - will show us our current remote
#so we could push our local code up there by typing:
#"git push origin master" - will push our code remotely
#"git status" - will show us what we changed locally